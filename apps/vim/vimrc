set ts=2
set ignorecase
set tabstop=2
set expandtab

" show line numbers
set number
" show column number
set ruler

" exclude certain common folders from wildcard expansion (
" during search, etc.)
set wildignore+=venv/*

""" Syntax highlighting and stuff
syntax on

" Typescript syntax highlighting is crazy slow so need to set re=0
" https://jameschambers.co.uk/vim-typescript-slow
set re=0
""" END Syntax highlighting and stuff


" bid ctrl p to `Files`
map <c-p> :Files<cr>

" Auto remove trailing white space on save
autocmd BufWritePre * %s/\s\+$//e

" Setup tabs per file type
autocmd FileType javascriptreact setlocal shiftwidth=2 tabstop=2
autocmd FileType javascript setlocal shiftwidth=2 tabstop=2
autocmd FileType python setlocal shiftwidth=4 tabstop=4

" Color scheme
colorscheme monokai

""""""""""""""""""""""""""""""""""
" vim plugins (managed by plug.vim
"
" per https://github.com/junegunn/vim-plug
" - `:PlugInstall` to install plugins
"
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
call plug#begin('~/.vim/plugged')

""" fzf is for File search and text matching
" fzf requires `brew install fzf` & `brew install ripgrep`
" File searching: I bind Ctrl-p (`map <c-p>`) to :Files command for fzf
" - :Files runs the cmdline executable in the FZF_DEFAULT_COMMAND env var if
"   exists. If not exists, then defaults to `find`. FZF_DEFAULT_COMMAND should
"   be mapped to ripgrep cmdline (`rg`) via bash init file.
" - :Rg runs text search
" See https://github.com/junegunn/fzf.vim#commands
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

""" vim-gutentags requires ctags installed from homebrew - macos native version
" does not work
Plug 'ludovicchabant/vim-gutentags'

""" git blame in vim
" https://github.com/zivyangll/git-blame.vim
Plug 'zivyangll/git-blame.vim'

call plug#end()

"""" git blame in vim
" https://github.com/zivyangll/git-blame.vim
nnoremap <Leader>s :<C-u>call gitblame#echo()<CR>

let g:gutentags_ctags_exclude = [
      \ '*.git',
      \ '*/venv/*',
      \ 'dist',
      \ 'bin',
      \ '*/node_modules/*',
      \ ]
